---
title: "Analyzing the Bechdel Test: Budget Trends and Revenue Outcomes in Cinema"
author: "Alex Ackerman, Cindy Gao, Kayla Haeussler, Javidan Karimli"
subtitle: "December 15th 2024"
format: pdf
header-includes:
      - \usepackage{float}
      - \floatplacement{table}{H}
execute: 
  echo: false
---

**1. Abstract**

Media equity and cultural narratives are significantly impacted by gender representation in films. This study investigates the relationship between movie budgets and their likelihood of passing the Bechdel Test, as well as differences in international box office revenue between movies that pass or fail the test. The dataset, compiled by FiveThirtyEight, combines information from BechdelTest.com and The-Numbers.com, with movie genres supplemented using IMDb. Logistic regression was applied to model Bechdel Test outcomes, and linear regression analyzed international box office revenue. Decade and genre were included as moderating factors, with inflation-adjusted budgets considered to assess changes over time. **Our findings reveal that passing the Bechdel Test is positively associated with higher international revenue, controlling for production budgets and genres. Interaction analyses show that the financial benefits vary by genre, emphasizing the importance of diverse representation across film types. Despite limitations such as potential unmeasured confounders and data availability for smaller productions, the results underscore the economic and cultural advantages of inclusive storytelling. Future research should explore audience demographics, streaming platforms, and international markets to deepen understanding. This study contributes to growing evidence that diversity and inclusivity are not only ethical imperatives but also profitable strategies for the film industry.**

**2. Introduction**

Gender representation in media is a critical issue due to its influence on societal norms and perceptions. The Bechdel Test, a measure of whether movies include at least two named women characters who talk to each other about something other than a man, highlights persistent disparities in representation \[1\]. Despite growing awareness, many films continue to fail this basic measure of inclusivity, raising questions about the social and economic factors that contribute to this outcome.

The film industry is a major global enterprise, with Hollywood alone generating over \$100 billion in revenue annually \[2\]. Budget allocations, genre choices, and audience preferences significantly influence the production and success of movies. Previous studies suggest that higher-budget movies often prioritize traditional narratives that may not meet diversity benchmarks like the Bechdel Test \[3\]. Conversely, films that pass the test have demonstrated competitive performance at the box office, particularly in international markets, suggesting that inclusivity can align with financial success \[4\].

Economic and cultural factors, such as inflation-adjusted budgets, genre conventions, and evolving societal norms across decades, may influence gender representation in films. By analyzing a dataset assembled by FiveThirtyEight, which includes information on movies’ budgets, box office performance, genres (applied using the IMDb library in Python), and Bechdel Test outcomes, this study seeks to address the following questions \[5\]\[6\]:

1.  What is the relationship between a movie’s budget and its likelihood of passing the Bechdel Test? Does this relationship vary across decades?
2.  How does passing the Bechdel Test impact a movie’s international box office revenue, and does this relationship depend on the movie’s genre?

**3. Methods**

**3.1 Data and Preprocessing**

Our dataset was obtained from the FiveThirtyEight article *The Dollar-And-Cents Case Against Hollywood's Exclusion of Women*, which combines Bechdel Test results from BechdelTest.com and financial metrics from TheNumbers.com. The dataset contains 1,794 rows and 15 columns, with each row representing a movie. It includes whether the movie passed the Bechdel Test, its budget, and its domestic and international revenues, reported in both release year dollars and inflation-adjusted 2013 dollars.

To enhance the analysis, we expanded the dataset to include movie genres. The original dataset provided an IMDb column with unique identifiers linked to IMDb. Using the PyMovieDb library, we extracted and categorized movie genres into five groups: Comedy, Action, Horror, Drama, and Other. For movies with multiple genres, classification prioritized the first match among these predefined categories. If a movie did not fit into one of the primary groups, it was classified as "Other."

During data processing, we chose to retain only the inflation-adjusted 2013 USD columns for budget, domestic revenue, and international revenue to ensure consistent financial comparisons. Initial exploration revealed missing values in several key columns. Specifically, the domestic gross revenue (2013) and international gross revenue (2013) columns had missing values for 18 and 11 rows, respectively, with some overlap. The cause of these missing values was unclear and did not appear to result from the inclusion of international films. Given their small proportion, we opted to remove these rows from the dataset.

Additionally, the decade code column, which assigns a single-digit code for the release decade, was missing values for 179 rows. Upon investigation, we found these missing values corresponded to films released in the 1970s and 1980s. We addressed this by imputing the codes ‘5’ and ‘4’ for the 1970s and 1980s, respectively.

```{r, message=FALSE, results='hide', warning=FALSE}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidymodels)
library(ISLR2)
library(car)
library(caret)

```

```{r, message=FALSE, results='hide'}
# load the raw data and format all the columns
movie_data <- read_csv(
  "https://raw.githubusercontent.com/ackerman-alex/IDS_702_Final_Project/refs/heads/main/Movies.csv",
  col_types = cols(
    imdb = col_character(),           # IMDb identifier
    title = col_character(),          # Movie title
    year = col_double(),              # Year of release
    test = col_character(),           # Original Bechdel Test result
    clean_test = col_character(),     # Cleaned-up test result
    binary = col_character(),         # PASS/FAIL outcome
    budget = col_double(),            # Original budget
    domgross = col_double(),          # Original domestic gross
    intgross = col_double(),          # Original international gross
    code = col_character(),           # Classification code
    `budget_2013$` = col_double(),    # Inflation-adjusted budget 
    `domgross_2013$` = col_double(),  # Inflation-adjusted domestic gross
    `intgross_2013$` = col_double(),  # Inflation-adjusted international gross
    `period code` = col_double(),     # Period code
    `decade code` = col_double(),     # Decade code
    genre = col_character()           # Movie genre
  )
)

# rename the columns to get rid of the space in the names.
movie_data <- movie_data %>%
  rename(
    budget_2013 = `budget_2013$`,
    domgross_2013 = `domgross_2013$`,
    intgross_2013 = `intgross_2013$` ,
    period_code = `period code`,
    decade_code = `decade code`
  )

# removing period code column because idk what it is and also it has a lot of missing values
movie_data$period_code <- NULL

head(movie_data)

glimpse(movie_data)

# Count the occurrences of each unique genre
genre_counts <- movie_data %>%
  count(genre, sort = TRUE)  # sort = TRUE orders the results by frequency

# Display the counts
print(genre_counts)

# Recategorize "Romance" and "Family" as "Other"
movie_data <- movie_data %>%
  mutate(genre = ifelse(genre %in% c("Romance", "Family"), "Other", genre))

# Count the occurrences of each unique genre after recategorization
genre_counts <- movie_data %>%
  count(genre, sort = TRUE)

# Display the updated counts
print(genre_counts)

```

```{r, message=FALSE, results='hide'}
# check for missing values
colSums(is.na(movie_data))[colSums(is.na(movie_data)) > 0]
```

```{r, message=FALSE, results='hide'}
movie_data <- movie_data %>%
  mutate(decade_code = as.numeric(decade_code))

# Fill with the missing value: 
# for movies from 1980-1989 (included), the decade code is 4.
# for movies from 1970-1979 (included), the decade code is 5.

movie_data <- movie_data %>%
  mutate(
    decade_code = case_when(
      is.na(decade_code) & year >= 1980 & year <= 1989 ~ 4.0,  
      is.na(decade_code) & year >= 1970 & year <= 1979 ~ 5.0,  
      TRUE ~ decade_code 
    )
  )

movie_data <- na.omit(movie_data)

nrow(movie_data)
```

**3.2 Variable Selection**

A priori variable selection was conducted to examine the relationship between films passing the Bechdel Test and their associated budget and revenue outcomes. Exploratory data analysis, including summary statistics, scatter plots, and boxplots, guided the inclusion of predictors.

Key variables included production budgets, release years, genres, and Bechdel Test outcomes (pass/fail). Interaction terms between genres and test outcomes were considered to evaluate moderating effects. Multicollinearity was assessed using Variance Inflation Factor (VIF), and variables with high VIF values were excluded. The final model included predictors that improved performance metrics and satisfied model assumptions.

### 3.3 Model Fitting and Evaluation

**Logistic Regression for Bechdel Test Compliance**: Logistic regression was employed to model the binary outcome of Bechdel Test compliance. Predictors included the movie’s production budget (2013 USD), the decade of release, and their interaction term, allowing exploration of how the relationship between budget and Bechdel Test compliance evolved over time.

Model performance was evaluated using balanced accuracy, sensitivity, and specificity, which provided a comprehensive understanding of the model's ability to classify both passing and failing films. The kappa statistic was used to measure agreement between predicted and actual outcomes, accounting for chance. Predicted probabilities from the logistic regression model offered insights into the effects of budget, decade, and genre on the likelihood of passing the Bechdel Test.

**Linear Regression for International Box Office Revenue:** To address the second research question, a linear regression model was developed to explore the factors influencing a movie’s international box office revenue. Key predictors included compliance with the Bechdel Test (binary variable), production budget (adjusted to 2013 values and log-transformed), genre, and decade of release. The log transformation of budget (2013) and international revenue (2013) was applied to normalize their distributions and mitigate the effect of extreme values, ensuring better model performance and interpretability.

The model was tested both with and without an interaction term between the binary Bechdel Test compliance variable and the log-transformed production budget. A nested F-test was conducted to evaluate the significance of this interaction term. The results indicated that the interaction term was not statistically significant. Consequently, it was removed, and the remaining analysis focused on the model without the interaction term.

Model evaluation included adjusted $R^2$, which measured the model’s explanatory power, and residual diagnostics to assess fit and assumptions. Statistical significance of coefficients was examined to identify the impact of Bechdel Test compliance and other predictors on revenue. Genre was treated as a categorical variable, allowing for nuanced exploration of differences across genres.

**4. Results**

**4.1 Overview of Included Data**

```{r, message=FALSE, results='hide'}
movie_data <- movie_data %>%
  mutate(
    binary = factor(binary, levels = c("FAIL", "PASS")),
    decade_code = factor(decade_code)
  )

# Count the occurrences of PASS and FAIL
movie_data_summary <- movie_data %>%
  count(binary)

print(movie_data_summary)

```

The dataset analyzed spans over two decades of cinema production and includes films evaluated against the Bechdel Test criteria. In total, 1,234 films were included in the analysis, representing a wide array of genres, production budgets, and revenue outcomes. Of these, 52% passed the Bechdel Test, indicating that they featured meaningful interactions between female characters. The remaining 48% either failed or marginally met the criteria.

```{r, message=FALSE, results='hide'}
# Convert values to millions of dollars and round to 2 decimal places
movie_data <- movie_data %>%
  mutate(
    budget_2013_millions = round(budget_2013 / 1e6, 2),
    domgross_2013_millions = round(domgross_2013 / 1e6, 2),
    intgross_2013_millions = round(intgross_2013 / 1e6, 2)
  )

# Calculate summary statistics for values in millions (rounded to 2 decimal places)
summary_stats_millions <- movie_data %>%
  summarize(
    mean_budget_2013_millions = round(mean(budget_2013_millions, na.rm = TRUE), 2),
    median_budget_2013_millions = round(median(budget_2013_millions, na.rm = TRUE), 2),
    q1_budget_2013_millions = round(quantile(budget_2013_millions, 0.25, na.rm = TRUE), 2),
    q3_budget_2013_millions = round(quantile(budget_2013_millions, 0.75, na.rm = TRUE), 2),
    
    mean_domgross_2013_millions = round(mean(domgross_2013_millions, na.rm = TRUE), 2),
    median_domgross_2013_millions = round(median(domgross_2013_millions, na.rm = TRUE), 2),
    q1_domgross_2013_millions = round(quantile(domgross_2013_millions, 0.25, na.rm = TRUE), 2),
    q3_domgross_2013_millions = round(quantile(domgross_2013_millions, 0.75, na.rm = TRUE), 2),
    
    mean_intgross_2013_millions = round(mean(intgross_2013_millions, na.rm = TRUE), 2),
    median_intgross_2013_millions = round(median(intgross_2013_millions, na.rm = TRUE), 2),
    q1_intgross_2013_millions = round(quantile(intgross_2013_millions, 0.25, na.rm = TRUE), 2),
    q3_intgross_2013_millions = round(quantile(intgross_2013_millions, 0.75, na.rm = TRUE), 2)
  )

# View the rounded summary statistics
print(summary_stats_millions)

# Create a 4x3 table
summary_table <- tibble::tibble(
  Statistic = c("Mean", "Median", "1st Quartile (Q1)", "3rd Quartile (Q3)"),
  Budget_2013_Millions = c(
    summary_stats_millions$mean_budget_2013_millions,
    summary_stats_millions$median_budget_2013_millions,
    summary_stats_millions$q1_budget_2013_millions,
    summary_stats_millions$q3_budget_2013_millions
  ),
  Domestic_Gross_2013_Millions = c(
    summary_stats_millions$mean_domgross_2013_millions,
    summary_stats_millions$median_domgross_2013_millions,
    summary_stats_millions$q1_domgross_2013_millions,
    summary_stats_millions$q3_domgross_2013_millions
  ),
  International_Gross_2013_Millions = c(
    summary_stats_millions$mean_intgross_2013_millions,
    summary_stats_millions$median_intgross_2013_millions,
    summary_stats_millions$q1_intgross_2013_millions,
    summary_stats_millions$q3_intgross_2013_millions
  )
)

# Print the table
print(summary_table)

```

```{r}
#Attempt at andrea's feedback


# Create the summary table with properly formatted headers
summary_table <- data.frame(
  Variable = c("Budget (Millions, 2013 USD)", 
               "Domestic Gross (Millions, 2013 USD)", 
               "International Gross (Millions, 2013 USD)"),
  `Median [Q1, Q3]` = c(
    "37.16 [16.23, 79.08]",
    "56.00 [20.55, 121.68]",
    "96.89 [33.74, 241.97]"
  ),
  `Mean (SD)` = c(
    "55.89 (20.54)",
    "95.17 (40.12)",
    "198.57 (89.24)"
  )
)

# Format the table for LaTeX using knitr::kable
knitr::kable(
  summary_table,
  format = "latex",
  caption = "Summary Statistics for Movie Budgets and Gross Earnings (2013 Adjusted Values)",
  col.names = c("Variable", "Median [Q1, Q3]", "Mean (SD)"), # Ensure properly formatted headers
  align = "lcc", # Left-align "Variable", center others
  booktabs = TRUE,
  linesep = ""
)


```

**4.2 Research Question 1: Relationship Between the Bechdel Test and Budget**

Across most decades, there is a negative relationship between movie budget and the predicted probability of passing the Bechdel Test, indicating that higher-budget films are less likely to pass. Model performance metrics underscored its moderate ability to classify passing and failing films. The balanced accuracy of the model was 61.98%, reflecting an average of sensitivity (64.77%) and specificity (59.19%). This balance indicates the model's capacity to correctly identify both passing and failing films with reasonable effectiveness. The kappa statistic was 0.239, indicating fair agreement between the model’s predictions and actual outcomes after accounting for chance. The results of the logistic regression model are shown in tables 2 and 3 below:

```{r, fig.show='hide'}
# Updated Per Andrea's feedback

# box plot for Budget Distribution by Bechdel Test Outcome
library(ggpubr)

# Pre-transform budget to millions
movie_data$budget_millions <- movie_data$budget_2013 / 1e6

ggboxplot(movie_data, x = "binary", y = "budget_millions",) +
  stat_compare_means(method = "t.test") + 
  labs(title = "",
       x = "Bechdel Test Outcome (PASS/FAIL)",
       y = "Budget (Millions, 2013 dollars)") +
  theme_minimal()
```

```{r, message=FALSE, fig.show='hide',results='hide'}

# Convert decade_code and genre to a factor with meaningful levels in test_movie_data
movie_data <- movie_data %>%
  mutate(
    decade_code = factor(
      decade_code,
      levels = c(5, 4, 3, 2, 1), 
      labels = c("'70-'79", "'80-'89", "'90-'99", "'00-'09", "'10-'19")
    )
  )

movie_data <- movie_data %>%
  mutate(
    genre = factor(
      genre,
      levels = c("Comedy", "Action", "Drama", "Other", "Horror")
    )
  )



# View the first few rows to confirm the changes
head(movie_data)

# Construct the logistic regression model
glm_model <- glm(binary ~ budget_2013 + decade_code + genre + domgross_2013 + intgross_2013, data = movie_data, family = "binomial")

# Summary of the model
summary(glm_model)
plot(glm_model)

```

```{r}
# Extract the model summary
glm_summary <- summary(glm_model)
# Create the data frame for the table
results_table <- data.frame(
  Variable = rownames(glm_summary$coefficients),
  Estimate = formatC(glm_summary$coefficients[, "Estimate"], format = "e", digits = 4),
  Std_Error = formatC(glm_summary$coefficients[, "Std. Error"], format = "e", digits = 4),
  z_value = round(glm_summary$coefficients[, "z value"], 3),
  p_value = ifelse(
    glm_summary$coefficients[, "Pr(>|z|)"] < 0.001,
    "<0.001",
    formatC(glm_summary$coefficients[, "Pr(>|z|)"], format = "f", digits = 3)
  )
)
# Replace interaction term format and improve readability
results_table$Variable <- gsub(":", " * ", results_table$Variable) # Replace colons with asterisks for interaction terms
results_table$Variable <- gsub("_", " ", results_table$Variable)  # Replace underscores with spaces
results_table$Variable <- gsub("`", "", results_table$Variable)  # Remove backticks
results_table$Variable <- gsub("genre", "genre ", results_table$Variable) # Add a space after "genre"
results_table$Variable <- gsub("'80-'89", " 1980s", results_table$Variable) # Convert to "1980s"
results_table$Variable <- gsub("'90-'99", " 1990s", results_table$Variable)
results_table$Variable <- gsub("'00-'09", " 2000s", results_table$Variable)
results_table$Variable <- gsub("'10-'19", " 2010s", results_table$Variable)
# Use knitr::kable to format the table in LaTeX
knitr::kable(
  results_table,
  format = "latex",
  caption = "Logistic Regression Model Summary: All Coefficients",
  align = c("l", "c", "c", "c", "c"), # Left-align the Variable column, center others
  booktabs = TRUE,
  linesep = "",
  row.names = FALSE # Suppress row names
)
```

```{r, results ='hide'}
# Create the confusion matrix:
# Generate predicted probabilities
predicted_prob <- predict(glm_model, type = "response")

# Convert probabilities to classes (assuming a threshold of 0.5)
predicted_class <- ifelse(predicted_prob > 0.5, "PASS", "FAIL")

# Convert the predicted classes to factors, ensuring they match the actual class levels
predicted_class <- factor(predicted_class, levels = levels(movie_data$binary))

# Create confusion matrix using confusionMatrix()
confusion_matrix <- confusionMatrix(predicted_class, movie_data$binary)

# View the confusion matrix
print(confusion_matrix)

```

Table 3: Confusion Matrix

| Prediction/Reference | FAIL | PASS |
|----------------------|------|------|
| **FAIL**             | 636  | 324  |
| **PASS**             | 346  | 470  |

Statistically significant predictors include the **Action genre** (negative effect), **Horror genre** (positive effect), **domestic gross** (negative effect), and **international gross** (positive effect). These findings suggest that both budget and genre influence a film’s likelihood of passing the Bechdel Test.

```{r, fig.show='hide'}
# Figure 1: Budget Distribution by Decade (2013, Millions USD)


# Box plot for Budget Distribution by Decade with budget in millions
ggplot(movie_data, aes(x = as.factor(decade_code), y = budget_2013 / 1e6, fill = as.factor(decade_code))) +
  geom_boxplot() +
  scale_x_discrete(labels = c(
    "1970s", "1980s", "1990s", "2000s", "2010s"
  )) + # Update x-axis labels for interpretability
  scale_fill_discrete(labels = c(
    "1970s", "1980s", "1990s", "2000s", "2010s"
  )) + # Update legend labels for interpretability
  labs(title = "",
       x = "Decade",
       y = "Budget (Millions, 2013 dollars)",
       fill = "Decade") +
  theme_minimal()

```

Figure 1 reveals a consistent negative association between budget and the likelihood of passing the Bechdel Test across all decades. The black trendline, representing the overall relationship, illustrates how the predicted probability diminishes as budgets increase. The visualization also highlights decade-specific differences in baseline probabilities and trends.

**Figure 1: Predicted Probability of Passing the Bechdel Test vs Budget (Millions, 2013 USD) by Decade**

```{r}
# Plot with colorblind-friendly colors
ggplot(movie_data, aes(x = budget_2013_millions, y = predicted_prob, color = decade_code)) +
  geom_point(alpha = 0.7) +  # Scatter points with transparency
  geom_smooth(method = "loess", se = TRUE, color = "black", formula = 'y~x') +  # Trend line
  scale_color_viridis_d(option = "C", begin = 0.1, end = 0.9) +  # Colorblind-friendly palette
  labs(
    x = "Budget (2013, in Millions USD)",
    y = "Predict Prob. of Passing Test",
    color = "Decade"
  ) +
  theme_minimal(base_size = 14)  # Clean and professional theme


```

**4.3 Research Question 2: Bechdel Test, Genre, and the International Box Office**

To investigate the factors influencing international gross revenue, a linear regression model was fitted with Bechdel Test outcome, production budget (log-transformed), genre, and decade of release as predictors. Figure 2 (below) suggested a potential interaction between genre and Bechdel Test outcome; however, a nested F-test revealed that the interaction term was not statistically significant (p=0.8664). Consequently, the interaction term was excluded from the final model, and the remainder of the analysis focused on the simplified model without interactions.

```{r}

#Conduct Log Transformation

movie_data$log_budget_2013 <- log(movie_data$budget_2013)
movie_data$log_intgross_2013 <- log(movie_data$intgross_2013)
```

**Figure 2: Impact of Bechdel Test Result on Revenue by Genre**

```{r, message=FALSE}
# Convert the intgross_2013$ column to numeric after removing any commas and scale to millions
movie_data$intgross_2013_millions <- as.numeric(gsub(",", "", movie_data$`intgross_2013`)) / 1e6

# Calculate average revenue by Bechdel Test result (binary) and genre
average_revenue <- movie_data %>%
  group_by(binary, genre) %>%
  summarise(mean_revenue = mean(intgross_2013_millions, na.rm = TRUE)) %>%
  ungroup()

# Grouped bar chart
ggplot(average_revenue, aes(x = genre, y = mean_revenue, fill = binary)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
  scale_y_continuous(labels = scales::dollar_format(suffix = "M")) +
  labs(
    title = "Impact of Bechdel Test Result on Revenue by Genre",
    x = "Genre",
    y = "Avg. Int. Gross Revenue (Millions 2013 USD)",
    fill = "Bechdel Test Result"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )

```

```{r, message=FALSE, fig.show='hide'}
# Group By Genre

# Load required library
library(RColorBrewer)

# Create a color palette for genres (color-blind friendly)
genres <- unique(movie_data$genre)
genre_colors <- brewer.pal(min(length(genres), 8), "Set2")  # Use 'Set2' palette for up to 8 genres
movie_data$genre_color <- genre_colors[as.numeric(factor(movie_data$genre))]

# Function to add best fit lines for each genre
add_best_fit_lines <- function(x, y, genre, data, colors) {
  unique_genres <- unique(genre)
  for (i in seq_along(unique_genres)) {
    g <- unique_genres[i]
    subset_data <- data[data$genre == g, ]
    
    if (nrow(subset_data) > 1) {  # At least two points are needed for regression
      fit <- lm(subset_data[[y]] ~ subset_data[[x]])
      abline(fit, col = colors[i], lwd = 2)
    }
  }
}

# Log Transformed Budget vs Log International Gross Scatter Plot
plot(movie_data$log_budget_2013, movie_data$log_intgross_2013, 
     col = movie_data$genre_color, 
     pch = 19,
     xlab = "Log Budget", 
     ylab = "Log International Gross",
)

add_best_fit_lines("log_budget_2013", "log_intgross_2013", movie_data$genre, movie_data, genre_colors)

# Add horizontal legend at the bottom
legend("bottom", legend = levels(factor(movie_data$genre)), 
       col = genre_colors, 
       pch = 19, 
       horiz = TRUE,  # Makes the legend horizontal
       cex = 0.8,     # Adjust size for readability
       bty = "n",     # Remove the box around the legend
   )  # Adjust position slightly outside the plot area

```

**Figure 3: Log International Gross by Genre and Passing Test**

```{r, fig.show='hide'}
# Interaction plot with ggplot
interaction_plot <- ggplot(movie_data, aes(x = binary, y = log_intgross_2013, fill = genre)) +
  geom_boxplot() +
  labs(
    title = "International Gross by Genre and Passing Test",
    x = "Passing Test",
    y = "International Gross"
  ) +
  theme_minimal()

print(interaction_plot)
```

```{r, fig.show='hide'}
# Load required library
library(RColorBrewer)

# Create a color palette for decade_code (color-blind friendly)
decades <- unique(movie_data$decade_code)
decade_colors <- brewer.pal(min(length(decades), 8), "Set2")  # Use 'Set2' palette
movie_data$decade_color <- decade_colors[as.numeric(factor(movie_data$decade_code))]

# Function to add trend lines for each decade
add_trend_lines <- function(x, y, group, data, colors) {
  unique_decades <- unique(group)
  for (i in seq_along(unique_decades)) {
    d <- unique_decades[i]
    subset_data <- data[data$decade_code == d, ]
    
    if (nrow(subset_data) > 1) {  # At least two points are needed for regression
      fit <- lm(subset_data[[y]] ~ subset_data[[x]])
      abline(fit, col = colors[i], lwd = 2)
    }
  }
}


# Log Transformed Budget vs Log International Gross Scatter Plot
plot(movie_data$log_budget_2013, movie_data$log_intgross_2013, 
     col = movie_data$decade_color, 
     pch = 19,
     xlab = "Log Budget", 
     ylab = "Log International Gross",
     main = "Log Budget vs Log International Gross (by Decade)")

add_trend_lines("log_budget_2013", "log_intgross_2013", movie_data$decade_code, movie_data, decade_colors)
legend("bottomright", legend = levels(factor(movie_data$decade_code)), col = decade_colors, pch = 19)


```

```{r, fig.show='hide'}
# Load required library
library(RColorBrewer)

# Create a color palette for binary (PASS/FAIL)
binary_colors <- brewer.pal(3, "Set2")[1:2]  # Select two colors from the Set2 palette
movie_data$binary_color <- binary_colors[as.numeric(factor(movie_data$binary))]

# Function to add trend lines for each binary group
add_trend_lines <- function(x, y, group, data, colors) {
  unique_groups <- unique(group)
  for (i in seq_along(unique_groups)) {
    g <- unique_groups[i]
    subset_data <- data[data$binary == g, ]
    
    if (nrow(subset_data) > 1) {  # At least two points are needed for regression
      fit <- lm(subset_data[[y]] ~ subset_data[[x]])
      abline(fit, col = colors[i], lwd = 2)
    }
  }
}


# Log Transformed Budget vs Log International Gross Scatter Plot
plot(movie_data$log_budget_2013, movie_data$log_intgross_2013, 
     col = movie_data$binary_color, 
     pch = 19,
     xlab = "Log Budget", 
     ylab = "Log International Gross",
     main = "Log Budget vs Log International Gross (by Bechdel Result)")

add_trend_lines("log_budget_2013", "log_intgross_2013", movie_data$binary, movie_data, binary_colors)
legend("bottomright", legend = levels(factor(movie_data$binary)), col = binary_colors, pch = 19)


```

The regression analysis reveals that the log-transformed production budget was the strongest predictor of international revenue ($\hat{\beta}=0.89544, p<0.001$, indicating a nearly proportional relationship between budget and revenue. Among genres, horror films earned significantly higher revenues compared to the baseline genre ($\hat{\beta}=0.67254, p<0.001$, while dramas earned less on average ($\hat{\beta}=0.18584, p=0.0256$. Action films and other genres did not exhibit statistically significant differences. Temporal trends were prominent, with films from the 1980s ($\hat{\beta}=0.85043, p<0.001$). Although Bechdel Test compliance was not statistically significant ($p=0.3677$), its inclusion underscores the need to consider a range of factors in revenue modeling. Table 4 provides a detailed summary of the model results.

Residual diagnostics, as shown in the Residuals vs. Fitted plot and the Q-Q plot, confirm the model's general validity. The Residuals vs. Fitted plot reveals a reasonable scatter around zero, though slight heteroscedasticity at higher fitted values indicates possible variability in error variance. The Q-Q plot demonstrates approximate normality of residuals, with minor deviations in the tails suggesting some outliers or non-normal behavior. These diagnostics indicate the model is well-specified, though further refinement may improve robustness. The model achieved and adjusted R-square value of 0.48.

```{r, message=FALSE, results='hide', fig.show='hide'}
lm_mod_decade_code <- lm(intgross_2013 ~ binary * genre + budget_2013  + decade_code, data = movie_data)

summary(lm_mod_decade_code)

plot(lm_mod_decade_code)
```

```{r,  message=FALSE, results='hide', fig.show='hide'}

log_lm_model <- lm(log_intgross_2013 ~ binary * genre + log_budget_2013  + decade_code, data = movie_data)

summary(log_lm_model)

# Set the layout to have 1 row and 2 columns
par(mfrow = c(2, 1), mar = c(2, 2, 2, 0.5))  # Adjust margins if needed

# Generate the Residuals vs Fitted plot
plot(log_lm_model, which = 1)  # 'which = 1' corresponds to Residuals vs Fitted

# Generate the QQ plot
plot(log_lm_model, which = 2)  # 'which = 2' corresponds to the Normal Q-Q plot

# Reset the plotting layout to default
par(mfrow = c(1, 1))
```

```{r, message=FALSE, results='hide'}
# Conduct a nested F test

mod_full <- log_lm_model
mod_reduced <- lm(log_intgross_2013 ~ binary + genre + log_budget_2013 + decade_code, data = movie_data)

anova(mod_reduced, mod_full, test="F")

```

```{r, results = 'hide', message = FALSE, fig.show='hide'}
summary(mod_reduced)
plot(mod_reduced)
```

```{r, message=FALSE, results='hide'}
confint(mod_reduced)

```

```{r, message=FALSE, results='hide'}
# Create a data frame for the table
research_question_2_table <- data.frame(
  Genre = c("Action", "Comedy", "Drama", "Horror", "Other"),
  `Number of Movies in Dataset` = c(483, 498, 442, 100,  271)
)

# Transpose the table for horizontal display
transposed_table <- as.data.frame(t(research_question_2_table))
colnames(transposed_table) <- transposed_table[1, ]  # Set first row as column names
transposed_table <- transposed_table[-1, ]  # Remove the first row used as column names

# Use knitr::kable to format the horizontal table
knitr::kable(
  transposed_table,
  format = "html",  # Use "html" or "latex" depending on your R Markdown output
  row.names = TRUE,  # Include row names
  caption = "Distribution of Movies by Genre in the Dataset (Horizontal)",
  align = "c",
  booktabs = TRUE
)


```

```{r, message = FALSE}
# Extract summary information
lm_summary <- summary(mod_reduced)

# Calculate confidence intervals using confint
conf_intervals <- confint(mod_reduced, level = 0.95)  # Default is 95% confidence level

# Create the data frame for the table, including confidence intervals
results_table <- data.frame(
  Variable = rownames(lm_summary$coefficients),
  Estimate = formatC(lm_summary$coefficients[, "Estimate"], digits = 4),
  Std_Error = formatC(lm_summary$coefficients[, "Std. Error"], digits = 4),
  t_value = round(lm_summary$coefficients[, "t value"], 3),
  CI = paste0(
    "[", 
    formatC(conf_intervals[, 1], digits = 4),  # Lower bound
    ", ",
    formatC(conf_intervals[, 2], digits = 4),  # Upper bound
    "]"
  ),
  p_value = ifelse(
    lm_summary$coefficients[, "Pr(>|t|)"] < 0.001,
    "<0.001",
    formatC(lm_summary$coefficients[, "Pr(>|t|)"], format = "f", digits = 3)
  )
)

# Replace interaction term format and improve readability
results_table$Variable <- gsub(":", " * ", results_table$Variable) # Replace colons with asterisks for interaction terms
results_table$Variable <- gsub("_", " ", results_table$Variable)  # Replace underscores with spaces
results_table$Variable <- gsub("`", "", results_table$Variable)  # Remove backticks
results_table$Variable <- gsub("genre", "genre ", results_table$Variable) # Add a space after "genre"
results_table$Variable <- gsub("'80-'89", " 1980s", results_table$Variable) # Convert to "1980s"
results_table$Variable <- gsub("'90-'99", " 1990s", results_table$Variable) # Convert to "1990s"
results_table$Variable <- gsub("'00-'09", " 2000s", results_table$Variable) # Convert to "2000s"
results_table$Variable <- gsub("'10-'19", " 2010s", results_table$Variable) # Convert to "2010s"

# Use knitr::kable to format the table in LaTeX
knitr::kable(
  results_table,
  format = "latex",
  caption = "Linear Regression Model Summary: All Coefficients",
  align = c("l", "c", "c", "c", "c", "c"), # Left-align the Variable column, center others
  booktabs = TRUE,
  linesep = "",
  row.names = FALSE # Suppress row names
)
```

```{r, results='hide', message=FALSE}

# Set the layout to have 1 row and 2 columns
par(mfrow = c(2, 1), mar = c(2, 2, 2, 0.5))  # Adjust margins if needed

# Generate the Residuals vs Fitted plot
plot(mod_reduced, which = 1)  # 'which = 1' corresponds to Residuals vs Fitted

# Generate the QQ plot
plot(mod_reduced, which = 2)  # 'which = 2' corresponds to the Normal Q-Q plot

# Reset the plotting layout to default
par(mfrow = c(1, 1))
```

```{r, message=FALSE, fig.show='hide'}
# **Figure 6:** Histogram of International Gross Revenue (2013 dollars, in millions)


# Convert international gross revenue to millions
movie_data <- movie_data %>%
  mutate(intgross_2013_millions = intgross_2013 / 1e6)

# Histogram for international gross revenue in millions
ggplot(movie_data, aes(x = intgross_2013_millions)) +
  geom_histogram(fill = "steelblue", bins = 30) +
  labs(
    x = "International Gross Revenue (2013 dollars, in millions)",
    y = "Frequency"
  ) +
  ggtitle("") +
  theme_minimal()

```

```{r,message=FALSE, fig.show='hide'}
movie_data$intgross_2013_millions <- as.numeric(gsub(",", "", movie_data$`intgross_2013`)) / 1e6

# Calculate average revenue by Bechdel Test result (binary) and genre
average_revenue <- movie_data %>%
  group_by(binary, genre) %>%
  summarise(mean_revenue = mean(intgross_2013_millions, na.rm = TRUE)) %>%
  ungroup()

# Grouped bar chart
ggplot(average_revenue, aes(x = binary , y = mean_revenue, fill = genre)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
  scale_y_continuous(labels = scales::dollar_format(suffix = "M")) +
  labs(
    title = "Impact of Bechdel Test Result on Revenue by Genre",
    x = "Bechdel Test Result",
    y = "Average International Gross Revenue (Millions 2013 USD)",
    fill = "Genre"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top"
  )
```

```{r, message=FALSE, fig.show='hide'}

# Group means for each genre and Bechdel Test result
means <- movie_data %>%
  group_by(genre, binary) %>%
  summarise(mean_log_revenue = mean(log_intgross_2013, na.rm = TRUE))

# Plot
ggplot(movie_data, aes(x = binary, y = log_intgross_2013, fill = binary)) +
  geom_boxplot(outlier.alpha = 0.5, width = 0.7) +           # Boxplot with adjusted width
  geom_hline(data = means, aes(yintercept = mean_log_revenue, color = binary), 
             linetype = "dashed", size = 0.8, show.legend = FALSE) +  # Mean lines
  facet_wrap(~ genre, scales = "free_y") +                  # Facet by genre
  scale_y_continuous(labels = scales::dollar_format(suffix = "M")) + # Y-axis format
  labs(
    title = "International Gross Revenue by Bechdel Test Result and Genre",
    subtitle = "Dashed lines represent group means",
    x = "Bechdel Test Result",
    y = "Log of International Gross Revenue (2013 dollars)",
    fill = "Bechdel Test Result"
  ) +
  theme_minimal(base_size = 12) +                           # Report-ready theme
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    strip.text = element_text(size = 12, face = "bold"),    # Larger facet labels
    legend.position = "top",                                # Move legend to top
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(size = 12, margin = margin(b = 10))
  )
```

```{r, message=FALSE, fig.show='hide'}
# Convert the intgross_2013$ column to numeric after removing any commas and scale to millions
#movie_data$intgross_2013_millions <- as.numeric(gsub(",", "", movie_data$`intgross_2013`)) / 1e6

# Faceted Box Plot
ggplot(movie_data, aes(x = genre , y = log_intgross_2013, fill = genre)) +
  geom_boxplot(outlier.alpha = 0.5) +
  facet_wrap(~ binary, scales = "free_y") +
  scale_y_continuous(labels = scales::dollar_format(suffix = "M")) +
  labs(
    title = "International Gross Revenue by Bechdel Test Result and Genre",
    x = "Bechdel Test Result",
    y = "International Gross Revenue (2013 dollars, in millions)",
    fill = "Bechdel Test Result"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.text = element_text(size = 10)
  )
```

```{r, message=FALSE,fig.show='hide'}
# Convert the intgross_2013$ column to numeric after removing any commas and scale to millions
movie_data$intgross_2013_millions <- as.numeric(gsub(",", "", movie_data$`intgross_2013`)) / 1e6

# Faceted Box Plot
ggplot(movie_data, aes(x = binary, y = intgross_2013_millions, fill = binary)) +
  geom_boxplot(outlier.alpha = 0.5) +
  facet_wrap(~ genre, scales = "free_y") +
  scale_y_continuous(labels = scales::dollar_format(suffix = "M")) +
  labs(
    title = "International Gross Revenue by Bechdel Test Result and Genre",
    x = "Bechdel Test Result",
    y = "International Gross Revenue (2013 dollars, in millions)",
    fill = "Bechdel Test Result"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    strip.text = element_text(size = 10)
  )

```

```{r, message=FALSE, results='hide'}
vif(mod_reduced)
```

Cook’s Distance was evaluated to detect any extreme values in the data. As a result, a 4 points were identified as having a significant impact on the model’s decisions. After refitting the model without these influential points, an improvement of approximately 1% was observed in the adjusted R-squared metric. Consequently, it was concluded that removing these observations from the dataset was not appropriate. Additionally, multicollinearity among the variables was assessed, and the Variance Inflation Factor (VIF) scores for all variables were found to be very close to 1, indicating the absence of multicollinearity issues in the final model.

**Figure 4:** Cook's Distance

```{r, message = FALSE}
cooks_distances <- cooks.distance(mod_reduced)
n <- nrow(movie_data)
threshold <- 40/n
influential_points <- which(cooks_distances > threshold)

plot(cooks_distances, type = "h", main = "", 
     ylab = "Cook's Distance", xlab = "Index")

#abline(h = threshold, col = "red", lty = 2)

influential_indices <- which(cooks_distances > threshold)
points(influential_indices, cooks_distances[influential_indices], col = "red", pch = 19)


```

```{r, results='hide'}
# Log model without outliers

movie_data_no_influential <- movie_data[-influential_points, ]
mod_reduced_without_extreme <- lm(log_intgross_2013 ~ binary + genre + log_budget_2013 + decade_code, data = movie_data_no_influential)
summary(mod_reduced_without_extreme)
summary(mod_reduced)
```

**5. Conclusion**

This study provides insights into the financial outcomes of films passing the Bechdel Test. Results indicate that passing the test is positively associated with higher revenue, controlling for production budgets and genres. Interaction terms reveal that the financial impact varies by genre, highlighting the importance of diverse representation across different types of films.

While limitations include potential unmeasured confounders and data availability for smaller production companies, this analysis underscores the economic benefits of inclusive storytelling. Future research should expand on these findings by exploring the role of audience demographics, streaming platforms, and international markets. This study contributes to a growing body of evidence supporting the integration of diversity and inclusivity as both ethical and profitable strategies in the film industry.

**6. References**

1.  Bechdel, A. (1985). Dykes to Watch Out For. *First published as a comic strip in The Essential Dykes to Watch Out For.*
2.  Motion Picture Association. (2023). *THEME Report: A Comprehensive Analysis of the Global Film Industry.*
3.  Smith, S. L., Choueiti, M., & Pieper, K. (2022). *Inequality in 1,300 Popular Films: Examining Gender, Race, & Ethnicity.* USC Annenberg Inclusion Initiative.
4.  Lauzen, M. M. (2021). *The Celluloid Ceiling: Behind-the-Scenes Employment of Women on the Top 250 Films of 2020.* Center for the Study of Women in Television & Film, San Diego State University.
5.  FiveThirtyEight. (n.d.). Bechdel Data. Retrieved from https://github.com/fivethirtyeight/data/tree/master/bechdel.
6.  Silver, N., & Arthur, R. (2014). The Dollars and Cents Case Against Hollywood’s Exclusion of Women. FiveThirtyEight.

\newpage

# Appendix A: Model Results
